name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: line_test

    steps:
      - uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2

      - name: Install dependencies
        run: |
          gem install bundler:2.5.5
          bundle install --jobs 4 --retry 3

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install JavaScript dependencies
        run: npm install --legacy-peer-deps

      - name: Precompile assets
        env:
          RAILS_ENV: test
        run: node build.ci.js

      - name: Wait for PostgreSQL to be ready
        run: |
          while ! pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for postgres to be ready..."
            sleep 1
          done

      - name: Set up PostgreSQL
        run: |
          psql -U postgres -c "CREATE ROLE postgres WITH LOGIN SUPERUSER PASSWORD 'postgres';"
          psql -U postgres -c "CREATE DATABASE line_test OWNER postgres;"

      - name: Set up database
        env:
          RAILS_ENV: test
          GITHUB_CLIENT_ID: ${{ secrets.GITHUB_CLIENT_ID }}
          GITHUB_CLIENT_SECRET: ${{ secrets.GITHUB_CLIENT_SECRET }}
        run: |
          mv config/database.ci.yml config/database.yml
          bin/rails db:create db:schema:load

      - name: Clear cache
        run: rm -rf tmp/cache

      - name: Run tests
        env:
          RAILS_ENV: test
          GITHUB_CLIENT_ID: ${{ secrets.GITHUB_CLIENT_ID }}
          GITHUB_CLIENT_SECRET: ${{ secrets.GITHUB_CLIENT_SECRET }}
        run: bundle exec rspec
